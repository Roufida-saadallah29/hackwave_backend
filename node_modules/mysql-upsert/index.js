const upsert = mysql => (table, data, fields) => {
  if (!mysql) {
    return Promise.reject('Missing "mysql" object. See documentation of "mysql-upsert"')
  }

  if (!mysql.query) {
    return Promise.reject('Missing "query" function on "mysql" object. See documentation of "mysql-upsert"')
  }

  if (!table) {
    return Promise.reject('Missing "table" name. See documentation of "mysql-upsert"')
  }

  if (!data) {
    return Promise.reject('Missing "data" array. See documentation of "mysql-upsert"')
  }

  if (!data.length) {
    return Promise.resolve({ affectedRows: 0 })
  }

  fields = (fields || Object.keys(data[0]))
  const values = data.map(item => fields.map(field => item[field]))
  const keyUpdate = fields.map(field => '?? = VALUES(??) ')
  const query = `INSERT INTO ?? (??) VALUES ? ON DUPLICATE KEY UPDATE ${keyUpdate}`
  const keyUpdateFields = fields.reduce((sum, current) => sum.concat([current, current]), [])

  return mysql.query(query, [table, fields, values].concat(keyUpdateFields))
}

module.exports = upsert
